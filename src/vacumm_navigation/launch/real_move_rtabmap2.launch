<?xml version="1.0" encoding="UTF-8"?>
<launch>

    <arg name="rate" default="5"/>
    <arg name="approx_sync" default="true" />
    <!-- true for freenect driver -->
    <arg name="rgbd_sync" default="true"/>


    <param name="robot_description" command="$(find xacro)/xacro '$(find vacumm_description)/urdf/vacumm7.xacro'
        --inorder " />


    <rosparam command="load" file="$(find vacumm_control)/config/control.yaml" />

    <!-- Load hardware interface -->
    <node name="vacumm_hw_main" pkg="vacumm_hardware" type="vacumm_hw_main" output="screen"/>

    <node name="base_controller_spawner" pkg="controller_manager" type="controller_manager" respawn="false" output="screen" args=" spawn  
                    joint_state_controller 
                    diff_drive_controller "/>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
    </node>

    <include file="$(find freenect_launch)/launch/freenect.launch">
        <arg name="depth_registration" value="true" />
        <arg name="publish_tf" default="false"/>
    </include>

    <!-- <node pkg="depthimage_to_laserscan" type="depthimage_to_laserscan" name="depthimage5_to_laserscan">
        <remap from="image" to="/camera/depth/image_raw"/>
        <remap from="camera_info" to="/camera/rgb/camera_info"/>
        <remap from="scan" to="/camera/scan"/>
        <param name="range_max" type="double" value="4"/>
        <param name="output_frame_id" value="camera_link"/>
    </node> -->




    <node name="pointcloud_to_laserscan" pkg="nodelet" type="nodelet" args="load pointcloud_to_laserscan/pointcloud_to_laserscan_nodelet camera_nodelet_manager" output="screen">
        <remap from="cloud_in" to="depth_registered/points" />
        <!-- <remap from="scan" to="/scan" /> -->
        <param name="target_frame" type="str" value="camera_link"/>
    </node>




    <node name="ros_serial_node" pkg="rosserial_python" type="serial_node.py" output="screen">
        <param name="port" type="string" value="/dev/ttyUSB0"/>
        <param name="baud" type="int" value="115200"/>
    </node>

    <node pkg="imu_filter_madgwick" type="imu_filter_node" name="imu_filter_madgwick" output="screen" respawn="false">
        <remap from="/imu/data_raw" to="/vacumm/imu"/>
        <param name="fixed_frame" value="base_footprint" />
        <param name="use_mag" value="false" />
        <param name="publish_tf" value="true" />
        <param name="use_magnetic_field_msg" value="false" />
        <param name="world_frame" value="enu" />
    </node>


  <!-- <node pkg="imu_complementary_filter" type="complementary_filter_node" name="imu_complementary_filter" output="screen" respawn="false">
        <remap from="/imu/data_raw" to="/vacumm/imu"/>
        <param name="fixed_frame" value="base_footprint" />
        <param name="use_mag" value="false" />
        <param name="publish_tf" value="true" />
        <param name="use_magnetic_field_msg" value="false" />
        <param name="world_frame" value="enu" />
    </node> -->


    <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization">
        <rosparam command="load" file="$(find vacumm_navigation)/config3/ekf_localization.yaml"/>
    </node>


    <include file="$(find vacumm_navigation)/launch/rtabmap.launch">
        <arg name="rgbd_sync" value="true" />
        <arg name="rgbd_topic" value="/camera/rgbd_image" />
        <arg name="compressed" value="true" />
        <arg name="rtabmap_args" value="--delete_db_on_start" />
        <arg name="frame_id" value="base_footprint" />
        <arg name="odom_frame_id" value="odom" />

        <arg name="odom_tf_angular_variance" value="0.0001"/>
        <arg name="odom_tf_linear_variance" value="0.0001"/>
        <arg name="visual_odometry" value="false" />
        <arg name="odom_topic" value="/odometry/filtered" />
    </include>


</launch>
