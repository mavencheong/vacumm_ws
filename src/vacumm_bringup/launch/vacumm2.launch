<?xml version="1.0" encoding="UTF-8"?>
<launch>
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
    <arg name="gui_required" default="true"/>
    <arg name="mesh_enabled" default="true"/>

    <arg name="database_path"     default="rtabmap.db"/>
    <arg name="rgbd_odometry"     default="false"/>
    <arg name="rtabmapviz"        default="true"/>
    <arg name="localization"      default="false"/>
    <arg name="simulation"        default="true"/>
    <arg name="sw_registered"     default="false"/>
    <arg     if="$(arg localization)" name="args"  default=""/>
    <arg unless="$(arg localization)" name="args"  default="--delete_db_on_start"/>

    <arg     if="$(arg simulation)" name="rgb_topic"   default="/camera/rgb/image_raw"/>
    <arg unless="$(arg simulation)" name="rgb_topic"   default="/camera/rgb/image_rect_color"/>
    <arg     if="$(arg simulation)" name="depth_topic" default="/camera/depth/image_raw"/>
    <arg unless="$(arg simulation)" name="depth_topic" default="/camera/depth_registered/image_raw"/>
    <arg name="camera_info_topic" default="/camera/rgb/camera_info"/>
    
    <arg name="wait_for_transform"  default="0.2"/> 


    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find vacumm_description)/worlds/vacumm_maze.world"/>
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="gui" value="$(arg gui)"/>
        <arg name="headless" value="$(arg headless)"/>
        <arg name="debug" value="$(arg debug)"/>
        <arg name="verbose" default="false"/>
        <arg name="gui_required" value="$(arg gui_required)"/>

    </include>

    


    <param name="robot_description" command="$(find xacro)/xacro '$(find vacumm_description)/urdf/vacumm4.xacro'
        --inorder " />

    <node name="vacumm_spawn" pkg="gazebo_ros" type="spawn_model" output="screen" args="  -z 0.0
                    -urdf 
                    -param robot_description 
                    -model vacumm_robot" />


    <rosparam command="load" file="$(find vacumm_control)/config/control.yaml" />

    <node name="base_controller_spawner" pkg="controller_manager" type="spawner" 
            args="  joint_state_controller
                    diff_drive_controller
                            "/>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
    </node>

    <!-- <node name="pointcloud_to_laserscan" pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node">
        <remap from="cloud_in" to="/camera/depth/points" />
        <remap from="scan" to="/camera/scan" />
        <param name="target_frame" type="str" value="camera_link"/>
    </node> -->

     <node pkg="depthimage_to_laserscan" type="depthimage_to_laserscan" name="depthimage_to_laserscan">
      <remap from="image"       to="/camera/depth/image_raw"/>
      <remap from="camera_info" to="/camera/rgb/camera_info"/>
      <remap from="scan"        to="/camera/scan"/>
      <param name="range_max" type="double" value="4"/>
    </node>


    <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="--delete_db_on_start">
          <param name="frame_id" type="string" value="base_footprint"/>

          <param name="subscribe_depth" type="bool" value="true"/>
          <param name="subscribe_scan" type="bool" value="true"/>

          <!-- <remap from="odom" to="/diff_drive_controller/odom"/> -->
          <remap from="scan" to="/camera/scan"/>

          <remap from="rgb/image"       to="/camera/rgb/image_raw"/>
          <remap from="depth/image"     to="/camera/depth/image_raw"/>
          <remap from="rgb/camera_info" to="/camera/rgb/camera_info"/>
           <remap from="grid_map" to="/map"/>

          <param name="queue_size" type="int" value="10"/>

          <!-- RTAB-Map's parameters -->
          <param name="RGBD/ProximityBySpace"     type="string" value="false"/>
          <param name="RGBD/AngularUpdate"        type="string" value="0.01"/>
          <param name="RGBD/LinearUpdate"         type="string" value="0.01"/>
          <param name="RGBD/OptimizeFromGraphEnd" type="string" value="false"/>
          <param name="Reg/Force3DoF"             type="string" value="true"/>
          <param name="Vis/MinInliers"            type="string" value="12"/>
          <param name="RGBD/CreateOccupancyGrid"            type="string" value="true"/>
          <param name="RGBD/OptimizeMaxError"            type="string" value="0"/>
            <param name="Mem/InitWMWithAllNodes" type="string" value="true"/>
            <param name="Rtabmap/StartNewMapOnLoopClosure" type="string" value="false"/>
            <param name="Odom/ResetCountdown" type="string" value="0"/>

          <param name="odom_frame_id" value="odom"/> <!-- adjust to actual odometry frame id -->
        <param name="odom_tf_linear_variance" value="0.0001"/> <!-- adjust depending on real odom error -->
        <param name="odom_tf_angular_variance" value="0.0005"/> 



        
          
    </node>

    

     <node name="rviz" pkg="rviz" type="rviz" args="-d $(find rtabmap_ros)/launch/config/turtlebot_navigation.rviz"/>

    <node name="rqt_robot_steering" pkg= "rqt_robot_steering" type = "rqt_robot_steering" output="screen" >
        <param name="default_topic" type="str" value="/diff_drive_controller/cmd_vel" />
    </node>
    

</launch>


<!-- 
        <!-- RTAB-Map's parameters: do "rosrun rtabmap rtabmap (double-dash)params" to see the list of available parameters. -->
        <param name="RGBD/ProximityBySpace" type="string" value="true"/>
        <!-- Local loop closure detection (using estimated position) with locations in WM -->
        <param name="RGBD/OptimizeFromGraphEnd" type="string" value="false"/>
        <!-- Set to false to generate map correction between /map and /odom -->
        <param name="Kp/MaxDepth" type="string" value="4.0"/>
        <param name="Reg/Strategy" type="string" value="0"/>
        <!-- Loop closure transformation: 0=Visual, 1=ICP, 2=Visual+ICP -->
        <param name="Icp/CorrespondenceRatio" type="string" value="0.3"/>
        <param name="Vis/MinInliers" type="string" value="10"/>
        <!-- 3D visual words minimum inliers to accept loop closure -->
        <param name="Vis/InlierDistance" type="string" value="0.1"/>
        <!-- 3D visual words correspondence distance -->
        <param name="RGBD/AngularUpdate" type="string" value="0.1"/>
        <!-- Update map only if the robot is moving -->
        <param name="RGBD/LinearUpdate" type="string" value="0.1"/>
        <!-- Update map only if the robot is moving -->
        <param name="RGBD/ProximityPathMaxNeighbors" type="string" value="0"/>
        <param name="Rtabmap/TimeThr" type="string" value="0"/>
        <param name="Mem/RehearsalSimilarity" type="string" value="0.30"/>
        <param name="Reg/Force3DoF" type="string" value="true"/>
        <param name="GridGlobal/MinSize" type="string" value="20"/> -->